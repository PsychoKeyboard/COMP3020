class PriorityList{
    constructor(){
        this.items = [];
    }

    enqueue(recipe, priority){
        var queueRecipe = new QueueRecipe(recipe, priority);
        var contain = false;

        for (var i = 0; i < this.items.length; i++){
            if (this.items[i].priority > queueRecipe.priority) {
                this.items.splice(i, 0, queueRecipe);
                contain = true;
                break;
            }
        }

        if(!contain){
            this.items.push(queueRecipe);
        }
    }

    dequeue(){
        if(this.isEmpty()){
            return "Underflow";
        }
        return this.items.shift();
    }

    // isEmpty function
    isEmpty()
    {
	    // return true if the queue is empty.
	    return this.items.length == 0;
    }

    front(){
        if(this.isEmpty()){
            return "No elements in Queue";
        }
        return this.items[0];
    }

    rear(){
        if(this.isEmpty()){
            return "No elements in Queue";
        }
        return this.items[this.items.length - 1];
    }
}